name: Deploy to k3s

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}:latest" | tr '[:upper:]' '[:lower:]')
          PACKAGE_NAME=$(basename ${{ github.repository }})
          echo "Building image $IMAGE_NAME..."
          echo "Package name: $PACKAGE_NAME"

          docker build -t $IMAGE_NAME -f apps/nextjs-app/Dockerfile .
          docker push $IMAGE_NAME

          echo "Waiting for package to be created..."
          sleep 15

          echo "Attempting to make package public..."
          # Try to make package public - this will work if package exists
          PUBLIC_RESPONSE=$(curl -s -w "%{http_code}" -X PATCH \
            -H "Authorization: Bearer ${{ secrets.REGISTRY_PASSWORD }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/users/${{ secrets.REGISTRY_USERNAME }}/packages/container/$PACKAGE_NAME/visibility" \
            -d '{"visibility":"public"}')

          PUBLIC_HTTP_CODE="${PUBLIC_RESPONSE: -3}"
          echo "Make public response code: $PUBLIC_HTTP_CODE"

          if [ "$PUBLIC_HTTP_CODE" = "200" ] || [ "$PUBLIC_HTTP_CODE" = "204" ]; then
            echo "✅ Package made public successfully"
          elif [ "$PUBLIC_HTTP_CODE" = "404" ]; then
            echo "⚠️  Package not found yet (HTTP 404) - this is normal for first run"
            echo "📦 Package will be created automatically on first successful push"
            echo "🔄 You can manually make it public later from GitHub Packages page"
          else
            echo "❌ Failed to make package public (HTTP $PUBLIC_HTTP_CODE)"
            echo "Response: ${PUBLIC_RESPONSE%???}"
            echo "🔍 Check your REGISTRY_USERNAME and REGISTRY_PASSWORD secrets"
          fi

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl config get-contexts

      - name: Deploy to k3s
        run: |
          export KUBECONFIG=kubeconfig
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/nextjs-app
