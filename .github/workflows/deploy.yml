name: Deploy to k3s

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        run: |
          # Just convert to lowercase, keep the organization/repo structure
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/$REPO_NAME:latest"
          echo "Building image: $IMAGE_NAME"

          docker build -t $IMAGE_NAME -f apps/nextjs-app/Dockerfile .
          docker push $IMAGE_NAME

          echo "✅ Image pushed successfully: $IMAGE_NAME"

      - name: Make package public (optional)
        run: |
          # Use the same normalized name
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          PACKAGE_NAME=$(basename $REPO_NAME)

          echo "Checking if package exists: $PACKAGE_NAME"
          sleep 10  # Wait for package to be created

          # Check if package exists first
          PACKAGE_CHECK=$(curl -s -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.REGISTRY_PASSWORD }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/users/${{ github.actor }}/packages/container/$PACKAGE_NAME")

          HTTP_CODE="${PACKAGE_CHECK: -3}"
          echo "Package check response: $HTTP_CODE"
          echo "Package check response body: ${PACKAGE_CHECK%???}"

          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Package exists, making it public..."
            PUBLIC_RESPONSE=$(curl -s -w "%{http_code}" -X PATCH \
              -H "Authorization: Bearer ${{ secrets.REGISTRY_PASSWORD }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/users/${{ github.actor }}/packages/container/$PACKAGE_NAME/visibility" \
              -d '{"visibility":"public"}')

            PUBLIC_HTTP_CODE="${PUBLIC_RESPONSE: -3}"
            echo "Make public response code: $PUBLIC_HTTP_CODE"
            echo "Make public response body: ${PUBLIC_RESPONSE%???}"

            if [ "$PUBLIC_HTTP_CODE" = "200" ] || [ "$PUBLIC_HTTP_CODE" = "204" ]; then
              echo "✅ Package made public successfully"
            else
              echo "❌ Failed to make package public (HTTP $PUBLIC_HTTP_CODE)"
              echo "🔍 This might be a permissions issue or the package doesn't exist yet"
            fi
          else
            echo "⚠️  Package not found yet (HTTP $HTTP_CODE) - this is normal for first run"
            echo "📦 Package will appear in GitHub Packages after a few minutes"
          fi

      - name: Verify package in GitHub
        run: |
          echo "🔍 Checking if package appears in GitHub Packages..."
          echo "Repository: ${{ github.repository }}"
          echo "Package URL: https://github.com/${{ github.repository }}/packages"
          echo "Direct package URL: https://github.com/${{ github.repository }}/packages/container/nextjs-monorepo"
          echo ""
          echo "📋 Manual verification steps:"
          echo "1. Go to: https://github.com/${{ github.repository }}/packages"
          echo "2. Look for 'nextjs-monorepo' package"
          echo "3. If not visible, check if it's private and needs to be made public"
          echo "4. The package should appear within 5-10 minutes after successful push"
          echo ""
          echo "🔧 Troubleshooting if package doesn't appear:"
          echo "1. Check if REGISTRY_PASSWORD has 'write:packages' permission"
          echo "2. Verify GitHub Container Registry is enabled for the repository"
          echo "3. Check repository settings > Actions > Workflow permissions"
          echo "4. Ensure the package isn't being created under a different name"

      - name: Deploy to k3s
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/nextjs-app
