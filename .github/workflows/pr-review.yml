name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ['feature/*']

permissions:
  contents: read
  packages: write

# Environment variables will be set in the build step

jobs:
  deploy-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push PR Docker image
        run: |
          # Extract tag from branch name (feature/activation-fee -> activation-fee)
          BRANCH_NAME="${{ github.head_ref }}"

          # Check if branch starts with feature/
          if [[ $BRANCH_NAME != feature/* ]]; then
            echo "‚ùå Branch $BRANCH_NAME does not start with feature/"
            echo "This workflow only runs for feature/* branches"
            exit 1
          fi

          IMAGE_TAG=${BRANCH_NAME#feature/}
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}:$IMAGE_TAG" | tr '[:upper:]' '[:lower:]')

          echo "‚úÖ Feature branch detected: $BRANCH_NAME"
          echo "Tag: $IMAGE_TAG"
          echo "Image: $IMAGE_NAME"

          export IMAGE_TAG=$IMAGE_TAG
          export IMAGE_NAME=$IMAGE_NAME

          docker build -t $IMAGE_NAME -f apps/nextjs-app/Dockerfile .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl config get-contexts

      - name: Deploy to K3s with Docker Compose
        run: |
          # Navigate to docker-compose directory
          cd apps/nextjs-app

          # Extract tag from branch name
          BRANCH_NAME="${{ github.head_ref }}"
          IMAGE_TAG=${BRANCH_NAME#feature/}

          # Create .env file for docker-compose
          echo "IMAGE_TAG=$IMAGE_TAG" > .env

          # Update docker-compose.yml to use the built image
          IMAGE_NAME="ghcr.io/${{ github.repository }}:$IMAGE_TAG"
          sed -i "s|ghcr.io/medotarek73/nextjs-monorepo:\${IMAGE_TAG:-latest}|$IMAGE_NAME|g" docker-compose.yml

          # Deploy with docker-compose on K3s
          docker-compose up -d

          # Create ingress for frontend only (backend is internal)
          HOST="$IMAGE_TAG.semibots.com"
          kubectl create ingress $IMAGE_TAG-ingress \
            --class=nginx \
            --rule="$HOST/*=frontend-application:3000" \
            --tls=wildcard-semibots-com-tls \
            --dry-run=client -o yaml | kubectl apply -f -

          echo "‚úÖ Deployed to K3s with docker-compose"
          echo "üåê Frontend: http://$HOST"
          echo "üîó Backend API: Internal only (no public access)"
