name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  packages: write

jobs:
  deploy-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push PR Docker image
        run: |
          IMAGE_TAG=pr-${{ github.event.pull_request.number }}
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}:$IMAGE_TAG" | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME -f apps/nextjs-app/Dockerfile .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl config get-contexts

      - name: Deploy PR environment
        run: |
          export KUBECONFIG=kubeconfig
          NS=pr-${{ github.event.pull_request.number }}
          HOST=pr-${{ github.event.pull_request.number }}.semibots.com

          kubectl create namespace $NS --dry-run=client -o yaml | kubectl apply -f -

          # Use existing deployment.yaml with namespace and image substitution
          sed "s/namespace: default/namespace: $NS/g" k8s/deployment.yaml | \
          sed "s|image: ghcr.io/medotarek73/nextjs-monorepo:latest|image: $IMAGE_NAME|g" | \
          kubectl apply -f -

          # Use existing service.yaml with namespace substitution
          sed "s/namespace: default/namespace: $NS/g" k8s/service.yaml | \
          sed "s/type: LoadBalancer/type: ClusterIP/g" | \
          kubectl apply -f -

          # Use existing ingress.yaml with namespace and host substitution
          sed "s/namespace: default/namespace: $NS/g" k8s/ingress.yaml | \
          sed "s/host: 'semibots.com'/host: '$HOST'/g" | \
          sed "s/- 'semibots.com'/- '$HOST'/g" | \
          sed "s/secretName: wildcard-semibots-com-tls/secretName: wildcard-semibots-com-tls/g" | \
          kubectl apply -f -

          echo "âœ… Deployed preview: http://$HOST"
